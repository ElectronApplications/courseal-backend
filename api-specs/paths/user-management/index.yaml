post:
  tags:
    - user-management
    - public
  summary: Creates a new account
  description: First checks if the account can be created. On creation returns a successful response.
  requestBody:
    content:
      application/json:
        schema:
          title: Registration info
          type: object
          properties:
            usertag:
              type: string
              description: The part of a "@usertag" without the "@" symbol. Can only contain "a-z", "0-9", and "_.-" symbols
            username:
              type: string
              description: The displayed username. Can be changed later
            password:
              type: string
              description: Plain-text password
    required: true
  responses:
    '201':
      description: OK
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "../../schemas/error_message.yaml"
    '403':
      description: Forbidden. This response is sent if registration of new accounts is disabled
      content:
        application/json:
          schema:
            $ref: "../../schemas/error_message.yaml"
    '409':
      description: Account already exists
      content:
        application/json:
          schema:
            $ref: "../../schemas/error_message.yaml"

get:
  tags:
    - user-management
  summary: Gets full information about the current user
  description: Unlike /api/user this can include private information
  parameters:
    - $ref: "../../parameters/jwt.yaml"
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            $ref: "../../schemas/user_info.yaml"
    '403':
      description: Token is invalid
      content:
        application/json:
          schema:
            $ref: "../../schemas/error_message.yaml"